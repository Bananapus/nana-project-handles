{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c509e0b7019aacb5ecb9750528c76c62ebac9f00140344dcd6ca842b438a04d64736f6c63430008170033","sourceMap":"521:3235:55:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:55;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203c509e0b7019aacb5ecb9750528c76c62ebac9f00140344dcd6ca842b438a04d64736f6c63430008170033","sourceMap":"521:3235:55:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000000},\"remappings\":[\":@chainlink/contracts/=lib/juice-contracts-v4/lib/chainlink/contracts/\",\":@contracts/=lib/juice-contracts-v4/src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@paulrberg/contracts/math/=lib/juice-contracts-v4/lib/prb-math/src/\",\":@permit2/=lib/juice-contracts-v4/lib/permit2/\",\":@prb/test/=lib/juice-contracts-v4/lib/prb-math/node_modules/@prb/test/\",\":chainlink/=lib/juice-contracts-v4/lib/chainlink/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/juice-contracts-v4/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":juice-contracts-v4/=lib/juice-contracts-v4/\",\":lib/openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-contracts/contracts/=lib/juice-contracts-v4/lib/permit2/lib/openzeppelin-contracts/contracts/\",\":permit2/=lib/juice-contracts-v4/lib/permit2/\",\":prb-math/=lib/juice-contracts-v4/lib/prb-math/src/\",\":solmate/=lib/juice-contracts-v4/lib/permit2/lib/solmate/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15\",\"dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8\",\"dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x9b84f3bf1dacee512c1445691a789056e9c71f63002fa109e3edc860276feb84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0f926fdab956f66d6c5e34911eff3464f5d89698ee04810afd6feffb788ecd\",\"dweb:/ipfs/Qmaq22PXW58mvsqQMj1RcsbALRsBRMGnJu37kpvqpsAXHP\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047\",\"dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512\",\"dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/juice-contracts-v4/lib/chainlink/contracts/","@contracts/=lib/juice-contracts-v4/src/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@paulrberg/contracts/math/=lib/juice-contracts-v4/lib/prb-math/src/","@permit2/=lib/juice-contracts-v4/lib/permit2/","@prb/test/=lib/juice-contracts-v4/lib/prb-math/node_modules/@prb/test/","chainlink/=lib/juice-contracts-v4/lib/chainlink/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","ens-contracts/=lib/ens-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/juice-contracts-v4/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","juice-contracts-v4/=lib/juice-contracts-v4/","lib/openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-contracts/contracts/=lib/juice-contracts-v4/lib/permit2/lib/openzeppelin-contracts/contracts/","permit2/=lib/juice-contracts-v4/lib/permit2/","prb-math/=lib/juice-contracts-v4/lib/prb-math/src/","solmate/=lib/juice-contracts-v4/lib/permit2/lib/solmate/"],"optimizer":{"enabled":true,"runs":100000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721","urls":["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245","dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0x0fe5062075b50bd13e38a5a399299aac3673f4b02a89e14f2bf3c382ee39f754","urls":["bzz-raw://27677c502fdf53d956d7c6974e45a3be600ef0c4c93fd9b75683ae99a03b1a15","dweb:/ipfs/QmWPw6UxStZkkWRGuPBDaa5XSFPUN2JBCdNnCSyut567m9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x3f1998a2904792ff2a576827876638b4917573186537f878d30b23277a3b8d38","urls":["bzz-raw://a8dfb08ed617c9d874de901e44ac8af7af7b13e7c84000a1da3cdaf6004593e8","dweb:/ipfs/QmPX2hZAvCZJCQNSXcWqhxh3xp6UitwESrw3K2u3aYNqiu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x9b84f3bf1dacee512c1445691a789056e9c71f63002fa109e3edc860276feb84","urls":["bzz-raw://4f0f926fdab956f66d6c5e34911eff3464f5d89698ee04810afd6feffb788ecd","dweb:/ipfs/Qmaq22PXW58mvsqQMj1RcsbALRsBRMGnJu37kpvqpsAXHP"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x8cd59334ed58b8884cd1f775afc9400db702e674e5d6a7a438c655b9de788d7e","urls":["bzz-raw://99e62c7de7318f413b6352e3f2704ca23e7725ff144e43c8bd574d12dbf29047","dweb:/ipfs/QmSEXG2rBx1VxU2uFTWdiChjDvA4osEY2mesjmoVeVhHko"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0x519e2c9d9c4dfd63311fb98663e55ba465772897cd4a98e3a5406a1f5959811f","urls":["bzz-raw://c4718d121f448f8fce3b28a276fd194014597319a4133696793893ae13c6e512","dweb:/ipfs/QmaQyHiKokgyWq9nREub6xGUAEYiGTiv4caigjGCiWZTjZ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":49691,"exportedSymbols":{"MessageHashUtils":[49690],"Strings":[49041]},"nodeType":"SourceUnit","src":"123:3634:55","nodes":[{"id":49618,"nodeType":"PragmaDirective","src":"123:24:55","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":49620,"nodeType":"ImportDirective","src":"149:39:55","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":49691,"sourceUnit":49042,"symbolAliases":[{"foreign":{"id":49619,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49041,"src":"157:7:55","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49690,"nodeType":"ContractDefinition","src":"521:3235:55","nodes":[{"id":49631,"nodeType":"FunctionDefinition","src":"1222:460:55","nodes":[],"body":{"id":49630,"nodeType":"Block","src":"1314:368:55","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:55","nodeType":"YulBlock","src":"1376:300:55","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:55","nodeType":"YulLiteral","src":"1397:4:55","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:55","nodeType":"YulLiteral","src":"1403:34:55","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:55","nodeType":"YulIdentifier","src":"1390:6:55"},"nativeSrc":"1390:48:55","nodeType":"YulFunctionCall","src":"1390:48:55"},"nativeSrc":"1390:48:55","nodeType":"YulExpressionStatement","src":"1390:48:55"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:55","nodeType":"YulLiteral","src":"1499:4:55","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:55","nodeType":"YulIdentifier","src":"1505:11:55"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:55","nodeType":"YulIdentifier","src":"1492:6:55"},"nativeSrc":"1492:25:55","nodeType":"YulFunctionCall","src":"1492:25:55"},"nativeSrc":"1492:25:55","nodeType":"YulExpressionStatement","src":"1492:25:55"},{"nativeSrc":"1571:31:55","nodeType":"YulAssignment","src":"1571:31:55","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:55","nodeType":"YulLiteral","src":"1591:4:55","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:55","nodeType":"YulLiteral","src":"1597:4:55","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:55","nodeType":"YulIdentifier","src":"1581:9:55"},"nativeSrc":"1581:21:55","nodeType":"YulFunctionCall","src":"1581:21:55"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:55","nodeType":"YulIdentifier","src":"1571:6:55"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":49627,"isOffset":false,"isSlot":false,"src":"1571:6:55","valueSize":1},{"declaration":49624,"isOffset":false,"isSlot":false,"src":"1505:11:55","valueSize":1}],"id":49629,"nodeType":"InlineAssembly","src":"1367:309:55"}]},"documentation":{"id":49622,"nodeType":"StructuredDocumentation","src":"552:665:55","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:55","parameters":{"id":49625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49624,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:55","nodeType":"VariableDeclaration","scope":49631,"src":"1254:19:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:55"},"returnParameters":{"id":49628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49627,"mutability":"mutable","name":"digest","nameLocation":"1306:6:55","nodeType":"VariableDeclaration","scope":49631,"src":"1298:14:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:55"},"scope":49690,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49657,"nodeType":"FunctionDefinition","src":"2148:229:55","nodes":[],"body":{"id":49656,"nodeType":"Block","src":"2234:143:55","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":49643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:55","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":49648,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49634,"src":"2343:7:55","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":49649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:55","memberName":"length","nodeType":"MemberAccess","src":"2343:14:55","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":49646,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49041,"src":"2326:7:55","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$49041_$","typeString":"type(library Strings)"}},"id":49647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:55","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":48854,"src":"2326:16:55","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":49650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":49645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:55","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":49644,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:55","typeDescriptions":{}}},"id":49651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":49652,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49634,"src":"2361:7:55","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":49641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:55","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":49640,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:55","typeDescriptions":{}}},"id":49642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:55","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:55","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":49653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":49639,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:55","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":49654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":49638,"id":49655,"nodeType":"Return","src":"2244:126:55"}]},"documentation":{"id":49632,"nodeType":"StructuredDocumentation","src":"1688:455:55","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:55","parameters":{"id":49635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49634,"mutability":"mutable","name":"message","nameLocation":"2193:7:55","nodeType":"VariableDeclaration","scope":49657,"src":"2180:20:55","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49633,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:55","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:55"},"returnParameters":{"id":49638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49657,"src":"2225:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:55"},"scope":49690,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49677,"nodeType":"FunctionDefinition","src":"2720:191:55","nodes":[],"body":{"id":49676,"nodeType":"Block","src":"2831:80:55","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":49670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:55","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":49671,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49660,"src":"2887:9:55","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":49672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49662,"src":"2898:4:55","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":49668,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:55","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":49669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:55","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:55","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":49673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":49667,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:55","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":49674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:55","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":49666,"id":49675,"nodeType":"Return","src":"2841:63:55"}]},"documentation":{"id":49658,"nodeType":"StructuredDocumentation","src":"2383:332:55","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:55","parameters":{"id":49663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49660,"mutability":"mutable","name":"validator","nameLocation":"2769:9:55","nodeType":"VariableDeclaration","scope":49677,"src":"2761:17:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49659,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:55","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49662,"mutability":"mutable","name":"data","nameLocation":"2793:4:55","nodeType":"VariableDeclaration","scope":49677,"src":"2780:17:55","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":49661,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:55","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:55"},"returnParameters":{"id":49666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49677,"src":"2822:7:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:55"},"scope":49690,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49689,"nodeType":"FunctionDefinition","src":"3353:401:55","nodes":[],"body":{"id":49688,"nodeType":"Block","src":"3462:292:55","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:55","nodeType":"YulBlock","src":"3524:224:55","statements":[{"nativeSrc":"3538:22:55","nodeType":"YulVariableDeclaration","src":"3538:22:55","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:55","nodeType":"YulLiteral","src":"3555:4:55","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:55","nodeType":"YulIdentifier","src":"3549:5:55"},"nativeSrc":"3549:11:55","nodeType":"YulFunctionCall","src":"3549:11:55"},"variables":[{"name":"ptr","nativeSrc":"3542:3:55","nodeType":"YulTypedName","src":"3542:3:55","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:55","nodeType":"YulIdentifier","src":"3580:3:55"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:55","nodeType":"YulLiteral","src":"3585:10:55","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:55","nodeType":"YulIdentifier","src":"3573:6:55"},"nativeSrc":"3573:23:55","nodeType":"YulFunctionCall","src":"3573:23:55"},"nativeSrc":"3573:23:55","nodeType":"YulExpressionStatement","src":"3573:23:55"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:55","nodeType":"YulIdentifier","src":"3620:3:55"},{"kind":"number","nativeSrc":"3625:4:55","nodeType":"YulLiteral","src":"3625:4:55","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:55","nodeType":"YulIdentifier","src":"3616:3:55"},"nativeSrc":"3616:14:55","nodeType":"YulFunctionCall","src":"3616:14:55"},{"name":"domainSeparator","nativeSrc":"3632:15:55","nodeType":"YulIdentifier","src":"3632:15:55"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:55","nodeType":"YulIdentifier","src":"3609:6:55"},"nativeSrc":"3609:39:55","nodeType":"YulFunctionCall","src":"3609:39:55"},"nativeSrc":"3609:39:55","nodeType":"YulExpressionStatement","src":"3609:39:55"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:55","nodeType":"YulIdentifier","src":"3672:3:55"},{"kind":"number","nativeSrc":"3677:4:55","nodeType":"YulLiteral","src":"3677:4:55","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:55","nodeType":"YulIdentifier","src":"3668:3:55"},"nativeSrc":"3668:14:55","nodeType":"YulFunctionCall","src":"3668:14:55"},{"name":"structHash","nativeSrc":"3684:10:55","nodeType":"YulIdentifier","src":"3684:10:55"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:55","nodeType":"YulIdentifier","src":"3661:6:55"},"nativeSrc":"3661:34:55","nodeType":"YulFunctionCall","src":"3661:34:55"},"nativeSrc":"3661:34:55","nodeType":"YulExpressionStatement","src":"3661:34:55"},{"nativeSrc":"3708:30:55","nodeType":"YulAssignment","src":"3708:30:55","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:55","nodeType":"YulIdentifier","src":"3728:3:55"},{"kind":"number","nativeSrc":"3733:4:55","nodeType":"YulLiteral","src":"3733:4:55","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:55","nodeType":"YulIdentifier","src":"3718:9:55"},"nativeSrc":"3718:20:55","nodeType":"YulFunctionCall","src":"3718:20:55"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:55","nodeType":"YulIdentifier","src":"3708:6:55"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":49685,"isOffset":false,"isSlot":false,"src":"3708:6:55","valueSize":1},{"declaration":49680,"isOffset":false,"isSlot":false,"src":"3632:15:55","valueSize":1},{"declaration":49682,"isOffset":false,"isSlot":false,"src":"3684:10:55","valueSize":1}],"id":49687,"nodeType":"InlineAssembly","src":"3515:233:55"}]},"documentation":{"id":49678,"nodeType":"StructuredDocumentation","src":"2917:431:55","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:55","parameters":{"id":49683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49680,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:55","nodeType":"VariableDeclaration","scope":49689,"src":"3378:23:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49679,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":49682,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:55","nodeType":"VariableDeclaration","scope":49689,"src":"3403:18:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:55"},"returnParameters":{"id":49686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49685,"mutability":"mutable","name":"digest","nameLocation":"3454:6:55","nodeType":"VariableDeclaration","scope":49689,"src":"3446:14:55","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:55","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:55"},"scope":49690,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":49621,"nodeType":"StructuredDocumentation","src":"190:330:55","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[49690],"name":"MessageHashUtils","nameLocation":"529:16:55","scope":49691,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":55}